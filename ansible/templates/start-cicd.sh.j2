#!/bin/bash
# CI/CD Pipeline Startup Script
# Generated by Ansible

set -e

PROJECT_DIR="{{ project_dir }}"
cd "$PROJECT_DIR"

echo "========================================="
echo "Starting Local CI/CD Pipeline"
echo "========================================="

# Check if Docker is running
if ! docker info >/dev/null 2>&1; then
    echo "❌ Docker is not running. Please start Docker first."
    exit 1
fi

# Check if ports are available
check_port() {
    if netstat -tuln | grep -q ":$1 "; then
        echo "⚠️  Port $1 is already in use"
        return 1
    fi
    return 0
}

echo "🔍 Checking port availability..."
PORTS_OK=true
for port in 3000 8080 5000; do
    if ! check_port $port; then
        PORTS_OK=false
    fi
done

if [ "$PORTS_OK" = false ]; then
    echo "❌ Some required ports are in use. Please free them first."
    echo "   Use: sudo lsof -i :PORT to find what's using a port"
    exit 1
fi

# Create directories if they don't exist
echo "📁 Creating data directories..."
make setup

# Start services
echo "🚀 Starting services..."
make start

echo ""
echo "✅ CI/CD Pipeline is starting up!"
echo ""
echo "📊 Service URLs:"
echo "   Forgejo:    http://{{ ansible_default_ipv4.address }}:3000"
echo "   ArgoCD:     http://{{ ansible_default_ipv4.address }}:8080"
echo "   Registry:   http://{{ ansible_default_ipv4.address }}:5000"
echo ""
echo "⏳ Services are starting up (this may take 2-3 minutes)..."
echo "   Run 'make status' to check when they're ready"
echo ""
echo "📚 Next steps:"
echo "   1. Wait for services to be ready: make status"
echo "   2. Configure Forgejo: http://{{ ansible_default_ipv4.address }}:3000"
echo "   3. Get ArgoCD password: make argocd-password"
echo "   4. Follow Quick Start Guide: docs/quick-start-guide.md"
echo ""